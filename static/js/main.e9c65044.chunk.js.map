{"version":3,"sources":["components/appHeader/index.js","components/appHeader/appHeader.js","components/searchPanel/index.js","components/searchPanel/searchPanel.js","components/postStatusFilter/index.js","components/postStatusFilter/postStatusFilter.js","components/postListItem/index.js","components/postListItem/postListItem.js","components/postList/postList.js","components/postList/index.js","components/postAddForm/index.js","components/postAddForm/postAddForm.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","onUpdateSearch","event","term","target","value","setState","state","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","activeClassName","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","important","classNames","like","PostList","posts","elements","item","obj","isEmpty","id","itemProps","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAdd","App","deleteItem","data","index","findIndex","element","before","slice","after","addItem","body","newItem","maxId","searchPost","items","length","indexOf","filterPosts","old","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9c65044.chunk.js","sourcesContent":["import AppHeader from './appHeader';\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n  return (\r\n    <div className='app-header d-flex'>\r\n      <h1>Андрей Бородин</h1>\r\n      <h2>Записей {allPosts}, из них понравилось {liked}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './searchPanel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: ''\r\n    }\r\n  }\r\n\r\n  onUpdateSearch = (event) => {\r\n      const term = event.target.value;\r\n      this.setState({term});\r\n      this.props.onUpdateSearch(term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n       className=\"form-control search-input\"\r\n       type='text'\r\n       placeholder='Поиск по записям'\r\n       onChange={this.onUpdateSearch}/>\r\n    )\r\n  }\r\n}","import PostStatusFilter from './postStatusFilter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttons = [\r\n      {name: 'all', label: 'Все'},\r\n      {name: 'like', label: 'Понравилось'}\r\n    ]\r\n  }\r\n  render() {\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const {filter, onFilterSelect} = this.props;\r\n      const active = filter === name;\r\n      const activeClassName = active ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n        <button \r\n          key={name}\r\n          type=\"button\" \r\n          className={`btn ${activeClassName}`}\r\n          onClick={() => onFilterSelect(name)}>{label}\r\n        </button>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    )\r\n  }\r\n}","import PostListItem from './postListItem';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n      const {label, onDelete, onToggleImportant, onToggleLiked, important, like}= this.props;\r\n      let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n      if(like) {\r\n        classNames += \" like\";\r\n      }\r\n\r\n      if(important) {\r\n        classNames += \" important\";\r\n      }\r\n      return (\r\n        <div className={classNames}>\r\n        <span\r\n         className='app-list-item-label'\r\n         onClick={onToggleLiked}\r\n        >\r\n          {label}\r\n        </span>\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n            <button \r\n              type=\"button\"\r\n              className=\" btn-star btn-sm\"\r\n              onClick={onToggleImportant}>\r\n              <i className=\"fa fa-star\"></i>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\" btn-trash btn-sm\"\r\n              onClick={onDelete}>\r\n              <i className=\"fa fa-trash-o\"></i>\r\n            </button>\r\n            <i className=\"fa fa-heart\"></i>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n}","import React from 'react';\r\nimport PostListItem from '../postListItem';\r\nimport './post-list.css';\r\n\r\nfunction isEmpty(obj) {\r\n  for(let key in obj) {\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n  const elements = posts.map((item) => {\r\n    if(typeof(item) === 'object' && isEmpty(item)) {\r\n      const{id, ...itemProps} = item;\r\n    return (\r\n        <li key={id} className=\"list-group-item\">\r\n          <PostListItem \r\n              {...itemProps}\r\n              onDelete={() => onDelete(id)}\r\n              onToggleImportant={() => onToggleImportant(id)}\r\n              onToggleLiked={() => onToggleLiked(id)}\r\n            />\r\n        </li>\r\n    )\r\n    }\r\n    \r\n  });\r\n  return (\r\n    <ul className=\"app-list list-group\">\r\n      {elements}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default PostList;","import PostList from './postList';\r\nexport default PostList;","import PostAddForm from './postAddForm';\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: ''\r\n    }\r\n  }\r\n\r\n  onValueChange = (event) => {\r\n    this.setState({\r\n      text: event.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAdd(this.state.text);\r\n    this.setState({\r\n      text: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n        className=\"bottom-panel d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"О чём Вы сейчас думаете?\"\r\n          className=\"form-control new-post-label\"\r\n          onChange={this.onValueChange}\r\n          value={this.state.text}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-secondary\">\r\n          Добавить</button>\r\n      </form>\r\n    )\r\n  }\r\n}","import App from './app';\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../appHeader';\r\nimport SearchPanel from '../searchPanel';\r\nimport PostStatusFilter from '../postStatusFilter';\r\nimport PostList from '../postList';\r\nimport PostAddForm from '../postAddForm';\r\n\r\nimport './app.css';\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        {label: \"Going to learn React\", important: true, like: false, id: 1},\r\n        {label: \"That is so good\", important: false, like: false, id: 2},\r\n        {label: \"I need a break...\", important: false, like: false, id: 3}\r\n      ],\r\n      term: '',\r\n      filter: 'all'\r\n    };\r\n    this.maxId = 4;\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(element => element.id === id);\r\n      const before = data.slice(0, index);\r\n      const after = data.slice(index + 1);\r\n      const newData = [...before, ...after];\r\n\r\n      return {\r\n        data: newData\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = (body) => {\r\n      const newItem = {\r\n        label: body,\r\n        important: false,\r\n        id: this.maxId++\r\n      }\r\n      this.setState(({data}) => {\r\n        const newArr =[...data, newItem];\r\n        return {\r\n          data: newArr\r\n        }\r\n      });\r\n  }\r\n\r\n  searchPost = (items, term) => {\r\n      if(term.length === 0) {\r\n        return items\r\n      }\r\n\r\n      return items.filter((item) => {\r\n        return item.label.indexOf(term) > -1;\r\n      });\r\n  }\r\n\r\n  filterPosts = (items, filter) => {\r\n    if(filter === 'like') {\r\n      return items.filter(item => item.like);\r\n    } else {\r\n      return items\r\n    }\r\n  }\r\n  \r\n  onToggleImportant = (id) => {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(element => element.id === id);\r\n      const old = data[index];\r\n      const newItem = {...old, important: !old.important};\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n      return {\r\n        data: newArr\r\n      }\r\n    });\r\n  }\r\n\r\n  onToggleLiked = (id) => {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(element => element.id === id);\r\n      const old = data[index];\r\n      const newItem = {...old, like: !old.like};\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n      return {\r\n        data: newArr\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdateSearch = (term) => {\r\n      this.setState({term});\r\n  }\r\n\r\n  onFilterSelect = (filter) => {\r\n    this.setState({filter});\r\n  }\r\n\r\n  render() {\r\n    const {data, term, filter} = this.state;\r\n    const liked = data.filter(item => item.like).length;\r\n    const allPosts = data.length;\r\n    const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\r\n\r\n    return (\r\n      <div className='app'>\r\n        <AppHeader\r\n          liked={liked}\r\n          allPosts={allPosts}/>\r\n        <div className='search-panel d-flex'>\r\n          <SearchPanel\r\n            onUpdateSearch={this.onUpdateSearch}/>\r\n          <PostStatusFilter\r\n            filter={filter}\r\n            onFilterSelect={this.onFilterSelect}/>\r\n        </div>\r\n        <PostList \r\n            posts={visiblePosts}\r\n            onDelete={this.deleteItem}\r\n            onToggleImportant={this.onToggleImportant}\r\n            onToggleLiked={this.onToggleLiked}/>\r\n        <PostAddForm\r\n            onAdd={this.addItem}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}